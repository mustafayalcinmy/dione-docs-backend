definitions:
  handlers.CreateDocumentRequest:
    properties:
      description:
        type: string
      is_public:
        type: boolean
      title:
        type: string
    type: object
  handlers.DocumentListResponse:
    properties:
      owned:
        items:
          $ref: '#/definitions/handlers.DocumentResponse'
        type: array
      shared:
        items:
          $ref: '#/definitions/handlers.DocumentResponse'
        type: array
    type: object
  handlers.DocumentResponse:
    properties:
      content:
        items:
          type: integer
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_public:
        type: boolean
      owner_id:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      version:
        type: integer
    type: object
  handlers.DocumentVersionResponse:
    properties:
      changed_by:
        type: string
      content:
        items:
          type: integer
        type: array
      created_at:
        type: string
      document_id:
        type: string
      id:
        type: string
      version:
        type: integer
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.LoginResponse:
    properties:
      token:
        type: string
    type: object
  handlers.MessageResponse:
    properties:
      message:
        type: string
    type: object
  handlers.PermissionResponse:
    properties:
      access_type:
        type: string
      document_id:
        type: string
      id:
        type: string
      user_email:
        type: string
      user_id:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  handlers.RegisterResponse:
    properties:
      token:
        type: string
    type: object
  handlers.RemoveAccessRequest:
    properties:
      user_email:
        type: string
    required:
    - user_email
    type: object
  handlers.ShareDocumentRequest:
    properties:
      access_type:
        type: string
      user_email:
        type: string
    required:
    - access_type
    - user_email
    type: object
  handlers.UpdateDocumentRequest:
    properties:
      content:
        items:
          type: integer
        type: array
      description:
        type: string
      is_public:
        type: boolean
      status:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/documents:
    post:
      consumes:
      - application/json
      description: Create a new document with title, description, and content
      parameters:
      - description: Document Data
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateDocumentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Document created successfully
          schema:
            $ref: '#/definitions/handlers.DocumentResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Authentication error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new document
      tags:
      - Documents
  /api/v1/documents/{id}:
    get:
      description: Retrieve a document by its unique identifier
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Document retrieved successfully
          schema:
            $ref: '#/definitions/handlers.DocumentResponse'
        "400":
          description: Invalid document ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Authentication error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Document not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get a document by ID
      tags:
      - Documents
    put:
      consumes:
      - application/json
      description: Update the title, description, or content of an existing document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated document data
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Document updated successfully
          schema:
            $ref: '#/definitions/handlers.DocumentResponse'
        "400":
          description: Invalid document ID or request format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Authentication error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Document not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update an existing document
      tags:
      - Documents
  /api/v1/documents/{id}/versions:
    get:
      description: Retrieve all versions of a specific document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Document version history
          schema:
            items:
              $ref: '#/definitions/handlers.DocumentVersionResponse'
            type: array
        "400":
          description: Invalid document ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Authentication error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Document not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get version history of a document
      tags:
      - Documents
  /api/v1/documents/user:
    get:
      description: Retrieve all owned and shared documents for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Documents retrieved successfully
          schema:
            $ref: '#/definitions/handlers.DocumentListResponse'
        "401":
          description: Authentication error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all documents for the authenticated user
      tags:
      - Documents
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token.
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Login endpoint
      tags:
      - Auth
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns a JWT token.
      parameters:
      - description: Registration data
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register endpoint
      tags:
      - Auth
  /documents/{id}/permissions:
    get:
      consumes:
      - application/json
      description: Get all permissions for a specific document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.PermissionResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get permissions of a document
      tags:
      - Permissions
  /documents/{id}/permissions/remove:
    post:
      consumes:
      - application/json
      description: Remove a specific user's access to a document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      - description: Remove access request
        in: body
        name: RemoveAccessRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.RemoveAccessRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Remove a user's access to a document
      tags:
      - Permissions
  /documents/{id}/permissions/share:
    post:
      consumes:
      - application/json
      description: Share a document with a user by providing the access type (read,
        edit, admin)
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      - description: Share document request
        in: body
        name: ShareDocumentRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.ShareDocumentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.PermissionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Share a document with a user
      tags:
      - Permissions
swagger: "2.0"
